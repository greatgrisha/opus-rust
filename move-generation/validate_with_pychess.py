import chess
import sys
import json

def validate_moves(board_fen, rust_moves):
    """
    Validate moves generated by the Rust library against PyChess.

    :param board_fen: The board state in FEN format.
    :param rust_moves: The moves generated by the Rust library.
    :return: A dictionary with validation results.
    """
    board = chess.Board(board_fen)
    pychess_moves = set(str(move) for move in board.legal_moves)

    rust_moves_set = set(rust_moves)

    missing_moves = pychess_moves - rust_moves_set
    extra_moves = rust_moves_set - pychess_moves

    return {
        "missing_moves": list(missing_moves),
        "extra_moves": list(extra_moves),
        "valid": len(missing_moves) == 0 and len(extra_moves) == 0
    }

if __name__ == "__main__":
    # Read input from stdin
    input_data = json.loads(sys.stdin.read())
    board_fen = input_data["board_fen"]
    rust_moves = input_data["rust_moves"]

    # Validate moves
    result = validate_moves(board_fen, rust_moves)

    # Output result as JSON
    print(json.dumps(result))
